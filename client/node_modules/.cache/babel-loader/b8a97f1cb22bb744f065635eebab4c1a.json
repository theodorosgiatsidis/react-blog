{"ast":null,"code":"var _jsxFileName = \"/Users/thodorosgiatsidis/react-blog/client/src/Pages/post/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router\";\nimport { StoreContext } from \"../../context/store\";\nimport \"./post.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState(null);\n  const {\n    id\n  } = useParams();\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(StoreContext);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    getPost();\n  }, []);\n\n  const getPost = async () => {\n    try {\n      const res = await axios.get(`/posts/${id}`);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDescription(res.data.description);\n    } catch (error) {}\n  };\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        username: user.username\n      });\n      window.location.replace(\"/\");\n    } catch (error) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        description\n      });\n      setUpdateMode(false);\n    } catch (error) {}\n  };\n\n  return post ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-wrapper\",\n    children: [updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      autoFocus: true,\n      onChange: e => setTitle(e.target.value),\n      className: \"title-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"desc-input\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdate,\n      className: \"singlePostButton\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"img-post\",\n      src: PF + post.picture,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"userName\",\n      style: {\n        color: \"coral\",\n        margin: \"10px\"\n      },\n      children: [\"Author: \", post.user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"singlePostDate\",\n      style: {\n        color: \"GrayText\"\n      },\n      children: new Date(post.createdAt).toDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), post.user.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostEdit\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"singlePostIcon fas fa-edit\",\n        onClick: () => setUpdateMode(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"singlePostIcon far fa-trash-alt\",\n        onClick: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this) : null;\n}\n\n_s(Post, \"xZA7r8Jm5Sh5+KobIyqjBdfpBno=\", false, function () {\n  return [useLocation, useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/thodorosgiatsidis/react-blog/client/src/Pages/post/Post.js"],"names":["React","useContext","useEffect","useState","useParams","useLocation","StoreContext","axios","Post","location","path","pathname","split","post","setPost","id","PF","user","title","setTitle","description","setDescription","updateMode","setUpdateMode","getPost","res","get","data","error","handleDelete","delete","_id","username","window","replace","handleUpdate","put","e","target","value","picture","color","margin","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router\";\nimport { StoreContext } from \"../../context/store\";\nimport \"./post.css\";\nimport axios from \"axios\";\n\nfunction Post() {\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState(null);\n  const { id } = useParams();\n  const PF = \"http://localhost:5000/images/\";\n  const { user } = useContext(StoreContext);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n\n  useEffect(() => {\n    getPost();\n  }, []);\n\n  const getPost = async () => {\n    try {\n      const res = await axios.get(`/posts/${id}`);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDescription(res.data.description);\n    } catch (error) {}\n  };\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        username: user.username,\n      });\n\n      window.location.replace(\"/\");\n    } catch (error) {}\n  };\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        description,\n      });\n      setUpdateMode(false);\n    } catch (error) {}\n  };\n\n  return post ? (\n    <div className=\"post-wrapper\">\n      {updateMode ? (\n        <input\n          type=\"text\"\n          value={title}\n          autoFocus\n          onChange={(e) => setTitle(e.target.value)}\n          className=\"title-input\"\n        />\n      ) : (\n        <h1>{title}</h1>\n      )}\n      {updateMode ? (\n        <textarea\n          className=\"desc-input\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          autoFocus\n        />\n      ) : (\n        <p>{description}</p>\n      )}\n      {updateMode && (\n        <button onClick={handleUpdate} className=\"singlePostButton\">\n          Update\n        </button>\n      )}\n      <img className=\"img-post\" src={PF + post.picture} alt=\"\" />\n      <p className=\"userName\" style={{ color: \"coral\", margin: \"10px\" }}>\n        Author: {post.user.username}\n      </p>\n      <p className=\"singlePostDate\" style={{ color: \"GrayText\" }}>\n        {new Date(post.createdAt).toDateString()}\n      </p>\n      {post.user.username === user?.username && (\n        <div className=\"singlePostEdit\">\n          <i\n            className=\"singlePostIcon fas fa-edit\"\n            onClick={() => setUpdateMode(true)}\n          ></i>\n          <i\n            className=\"singlePostIcon far fa-trash-alt\"\n            onClick={handleDelete}\n          ></i>\n        </div>\n      )}\n    </div>\n  ) : null;\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}